services:
  # =======================
  # MYSQL DATABASE
  # =======================
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    env_file: .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - internal_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # =======================
  # BACKEND - FASTAPI
  # =======================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_app
    env_file: .env
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend/app/uploads:/app/uploads
      - ./backend/app/logs:/app/logs
    networks:
      - internal_net
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    command: >
      sh -c "echo '‚è≥ Esperando a MySQL para iniciar backend...' &&
             sleep 30 &&
             uvicorn app.main:app --host 0.0.0.0 --port ${BACKEND_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 15s

  # =======================
  # FRONTEND - ANGULAR
  # =======================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_app
    env_file: .env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT}:8080"
    networks:
      - internal_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 20s

# =======================
# REDES Y VOLUMENES
# =======================
networks:
  internal_net:
    driver: bridge

volumes:
  mysql_data:

