{"ast":null,"code":"import { HttpRequest } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ExcelService = /*#__PURE__*/(() => {\n  class ExcelService {\n    http;\n    baseUrl = 'http://localhost:8009'; // Backend FastAPI\n    // NUEVO: BehaviorSubject para los datos del chart\n    chartDataSubject = new BehaviorSubject([]);\n    chartData$ = this.chartDataSubject.asObservable();\n    constructor(http) {\n      this.http = http;\n    }\n    uploadExcel(file) {\n      const formData = new FormData();\n      formData.append('file', file, file.name);\n      const req = new HttpRequest('POST', `${this.baseUrl}/files/upload`, formData, {\n        reportProgress: true,\n        responseType: 'json'\n      });\n      return this.http.request(req);\n    }\n    getFiles() {\n      return this.http.get(`${this.baseUrl}/files`);\n    }\n    getExcelPreview(id) {\n      return this.http.get(`${this.baseUrl}/files/${id}`);\n    }\n    insertExcelData(id) {\n      return this.http.post(`${this.baseUrl}/files/insert/${id}`, {});\n    }\n    deleteFile(id) {\n      return this.http.delete(`${this.baseUrl}/files/${id}`);\n    }\n    getChartData() {\n      return this.http.get(`${this.baseUrl}/files/chart`);\n    }\n    // NUEVO: actualizar chartData\n    setChartData(data) {\n      this.chartDataSubject.next(data);\n    }\n    // NUEVO: obtener datos y actualizar automáticamente el BehaviorSubject\n    fetchChartData() {\n      this.getChartData().subscribe(data => {\n        this.setChartData(data);\n      });\n    }\n    static ɵfac = function ExcelService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ExcelService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ExcelService,\n      factory: ExcelService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ExcelService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}