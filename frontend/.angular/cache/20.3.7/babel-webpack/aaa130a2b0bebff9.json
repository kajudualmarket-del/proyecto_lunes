{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { NgChartsModule } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let ChartComponent = /*#__PURE__*/(() => {\n  class ChartComponent {\n    // Cambiado de 'data' a 'chartData' para que coincida con el binding del AppComponent\n    chartDataInput; // Recibe los datos desde AppComponent\n    chartData = {\n      labels: [],\n      datasets: []\n    };\n    chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Estadísticas de Productos'\n        }\n      }\n    };\n    ngOnChanges(changes) {\n      if (changes['chartDataInput'] && this.chartDataInput) {\n        // Suponemos que chartDataInput es un arreglo de objetos { product: string, quantity: number }\n        this.chartData.labels = this.chartDataInput.map(item => item.product);\n        this.chartData.datasets = [{\n          label: 'Cantidad',\n          data: this.chartDataInput.map(item => item.quantity),\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }];\n      }\n    }\n    static ɵfac = function ChartComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChartComponent,\n      selectors: [[\"app-chart\"]],\n      inputs: {\n        chartDataInput: \"chartDataInput\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[2, \"display\", \"block\"], [\"baseChart\", \"\", \"chartType\", \"bar\", 3, \"data\", \"options\"]],\n      template: function ChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"canvas\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"data\", ctx.chartData)(\"options\", ctx.chartOptions);\n        }\n      },\n      dependencies: [CommonModule, NgChartsModule, i1.BaseChartDirective],\n      encapsulation: 2\n    });\n  }\n  return ChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}